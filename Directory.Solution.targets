<Project>
  <Target Name="GetGitBranch" BeforeTargets="DispatchToInnerBuilds"
    Condition="!Exists('$(MSBuildThisFileDirectory)\changes.log')">
    <Exec ConsoleToMSBuild="True" IgnoreExitCode="true" Command="git rev-parse --abbrev-ref HEAD"
      StandardOutputImportance="low" StandardErrorImportance="low">
      <Output TaskParameter="ConsoleOutput" PropertyName="GitBranch" />
      <Output TaskParameter="ExitCode" PropertyName="GitBranchExitCode" />
    </Exec>
  </Target>

  <Target Name="GetGitTag" AfterTargets="GetGitBranch"
    Condition="$(GitBranch) != '' AND Exists('$(MSBuildThisFileDirectory)\changes.log')">
    <Exec ConsoleToMSBuild="True" IgnoreExitCode="true"
      Condition="$(GitBranch) == 'master' OR $(GitBranch) == 'main'"
      Command='git describe --tags --abbrev=0 --exclude "v*-*"'
      StandardOutputImportance="low" StandardErrorImportance="low">
      <Output TaskParameter="ConsoleOutput" PropertyName="GitTag" />
      <Output TaskParameter="ConsoleOutput" PropertyName="GitVerTag" />
      <Output TaskParameter="ExitCode" PropertyName="GitTagExitCode" />
    </Exec>
    <Exec ConsoleToMSBuild="True" IgnoreExitCode="true"
      Condition="$(GitBranch) != 'master' AND $(GitBranch) != 'main'"
      Command="git describe --tags --abbrev=0"
      StandardOutputImportance="low" StandardErrorImportance="low">
      <Output TaskParameter="ConsoleOutput" PropertyName="GitTag" />
      <Output TaskParameter="ExitCode" PropertyName="GitTagExitCode" />
    </Exec>
  </Target>

  <Target Name="CreateGitLog" AfterTargets="GetGitTag"
    Condition="$(GitTag) != '' AND Exists('$(MSBuildThisFileDirectory)\changes.log')">
    <Exec Condition="$(GitTagExitCode) == 0"
      Command='git log --no-merges --pretty=format:&quot; - $(AddGitEscapeIfWindows)%25s&quot; $(GitTag)..HEAD> &quot;$(MSBuildThisFileDirectory)/changes.log&quot;'
      StandardOutputImportance="low" StandardErrorImportance="low" />
    <Exec Condition="$(GitTagExitCode) != 0"
      Command='git log --no-merges --pretty=format:&quot; - $(AddGitEscapeIfWindows)%25s&quot; > &quot;$(MSBuildThisFileDirectory)/changes.log&quot;'
      StandardOutputImportance="low" StandardErrorImportance="low" />

    <Exec Condition="$([MSBuild]::IsOSPlatform('Windows')) == 'true'"
      Command='type &quot;$(MSBuildThisFileDirectory)/changes.log&quot; | findstr /v ðŸ’š | findstr /v ðŸ”§ | findstr /v : > &quot;$(MSBuildThisFileDirectory)/changes.log&quot;'
      StandardOutputImportance="low" StandardErrorImportance="low" />
    <Exec Condition="$([MSBuild]::IsOSPlatform('Windows')) != 'true'"
      Command="sed -i '/^- ðŸ’š/ d' $(MSBuildThisFileDirectory)/changes.log"
      StandardOutputImportance="low" StandardErrorImportance="low" />
    <Exec Condition="$([MSBuild]::IsOSPlatform('Windows')) != 'true'"
      Command="sed -i '/^- ðŸ”§/ d' $(MSBuildThisFileDirectory)/changes.log"
      StandardOutputImportance="low" StandardErrorImportance="low" />
  </Target>
</Project>
