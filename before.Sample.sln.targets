<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <HasGlobalGitVersion>false</HasGlobalGitVersion>
    <HasGlobalGitVersion Condition="$([MSBuild]::IsOSPlatform('Windows')) AND Exists('$(HOMEDRIVE)$(HOMEPATH)\.dotnet\tools\dotnet-gitversion.exe')">true</HasGlobalGitVersion>
    <HasGlobalGitVersion Condition="$([MSBuild]::IsOSPlatform('Windows')) != 'true' AND Exists('$(HOME)/.dotnet/tools/dotnet-gitversion')">true</HasGlobalGitVersion>
  </PropertyGroup>

  <Target Name="GetGitBranch" BeforeTargets="Build;GenerateNuspec">
    <Exec ConsoleToMSBuild="True" IgnoreExitCode="true" Command="git rev-parse --abbrev-ref HEAD">
      <Output TaskParameter="ConsoleOutput" PropertyName="GitBranch" />
      <Output TaskParameter="ExitCode" PropertyName="GitBranchExitCode" />
    </Exec>
  </Target>

  <Target Name="GetGitTag" AfterTargets="GetGitBranch;GenerateNuspec" Condition="$(GitBranch) != ''">
    <Exec ConsoleToMSBuild="True" IgnoreExitCode="true" Condition="$(GitBranch) == 'master' OR $(GitBranch) == 'main'" Command='git describe --tags --abbrev=0 --exclude "v*-*"'>
      <Output TaskParameter="ConsoleOutput" PropertyName="GitTag" />
      <Output TaskParameter="ConsoleOutput" PropertyName="Version" />
      <Output TaskParameter="ExitCode" PropertyName="GitTagExitCode" />
    </Exec>
    <Exec ConsoleToMSBuild="True" IgnoreExitCode="true" Condition="$(GitBranch) != 'master' AND $(GitBranch) != 'main'" Command="git describe --tags --abbrev=0">
      <Output TaskParameter="ConsoleOutput" PropertyName="GitTag" />
      <Output TaskParameter="ExitCode" PropertyName="GitTagExitCode" />
    </Exec>
  </Target>

  <Target Name="CreateGitLog" AfterTargets="GetGitTag;GenerateNuspec" Condition="$(GitTag) != ''">
    <PropertyGroup>
      <Version>$(GitTag)</Version>
    </PropertyGroup>
    <Message Importance="High" Text="On $(Version) version" />
    <Exec Condition="$(GitTagExitCode) == 0" Command='git log --format=format:"- %s" --no-merges $(GitTag)..HEAD > changes.log' />
    <Exec Condition="$(GitTagExitCode) != 0" Command='git log --format=format:"- %s" --no-merges > changes.log' />

    <Exec Condition="$([MSBuild]::IsOSPlatform('Windows'))" Command='echo. >> changes.log &amp;&amp; echo. >> changes.log' />
    <Exec Condition="$([MSBuild]::IsOSPlatform('Windows')) != 'true'" Command='echo "%0A" >> changes.log' />

    <Exec Condition="$([MSBuild]::IsOSPlatform('Windows')) != 'true'" Command="sed -i '/^- ğŸ’š/ d' changes.log" />
    <Exec Condition="$([MSBuild]::IsOSPlatform('Windows')) != 'true'" Command="sed -i '/^- ğŸ”§/ d' changes.log" />

    <Exec Command='echo Emoji legend available at https://gitmoji.dev >> changes.log' />
  </Target>

  <Target Name="Update AssemblyInfo" AfterTargets="CreateGitLog">
    <Exec Command="dotnet gitversion /output json /showvariable SemVer /updateassemblyinfo AssemblyInfo.cs /ensureassemblyinfo" Condition="$([MSBuild]::IsOSPlatform('Windows')) AND $(HasGlobalGitVersion)" />
    <Exec Command="dotnet gitversion /output json /showvariable SemVer /updateassemblyinfo AssemblyInfo.cs /ensureassemblyinfo" Condition="$([MSBuild]::IsOSPlatform('Windows')) !='true' AND $(HasGlobalGitVersion)" />
  </Target>
</Project>
